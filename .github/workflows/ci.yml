name: 'C++ CI'

on: [push]

env:
  WORK_DIR: ./hw11

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORK_DIR }}
    steps:
      - name: Project checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install Boost
        run: |
          wget -q -O boost_1_86_0.tar.gz https://archives.boost.io/release/1.86.0/source/boost_1_86_0.tar.gz \
            && tar xzf boost_1_86_0.tar.gz \
            && cd boost_1_86_0/ \
            && ./bootstrap.sh --prefix=/usr/ \
            && echo ${{ secrets.USERPWD }} | sudo -S ./b2 install
      - name: Install SQLite
        run: |
          echo ${{ secrets.USERPWD }} | sudo -S apt-get update \
          && echo ${{ secrets.USERPWD }} | sudo -S  apt-get install sqlite3 libsqlite3-dev
      - name: Project build
        run: |
          cmake . -DPATCH_VERSION=${{ github.run_number }}
          cmake --build .
          cmake --build . --target package
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.WORK_DIR }}/join_server-0.0.${{ github.run_number }}-Linux.deb
          asset_name: join_server-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package
