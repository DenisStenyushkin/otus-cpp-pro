name: 'C++ CI'

on: [push]

env:
  WORK_DIR: ./hw13

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORK_DIR }}
    steps:
      - name: Project checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install TF
        run: |
          curl -s https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-linux-x86_64-2.5.0.tar.gz -o libtensorflow-cpu-linux-x86_64-2.5.0.tar.gz \
            && echo ${{ secrets.USERPWD }} | sudo -S tar -C /usr/local -xzf libtensorflow-cpu-linux-x86_64-2.5.0.tar.gz \
            && ldconfig
      - name: Install Eigen
        run: |
          wget -O eigen.zip https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.zip \
            && unzip eigen.zip \
            && echo ${{ secrets.USERPWD }} | sudo -S cp -r eigen-3.4.0/Eigen /usr/local/include
      - name: Project build
        run: |
          cmake . -DPATCH_VERSION=${{ github.run_number }}
          cmake --build .
          cmake --build . --target package
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.WORK_DIR }}/join_server-0.0.${{ github.run_number }}-Linux.deb
          asset_name: join_server-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package
